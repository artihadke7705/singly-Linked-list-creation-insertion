#include <iostream>

using namespace std;



class Node{
    public:
    int data;
    Node *next;
    Node * prev;
    
    Node(int data){
        this->data=data;
        this->next=NULL;
        this->prev=NULL;
    }
    // destructor
    ~ Node(){
        int val= this->data;
        if(next !=NULL){
            delete next;
            next=NULL;
            
        }
        cout<<"memory free for the node with the value :"<<val<< endl;
    }
    
};
// inserting node at last
void insertAtLast(Node* & tail,int data){
    Node * temp=new Node(data);
    tail->next=temp;
    temp->prev=tail;
    tail=temp;
}

// inserting node at starting
void insertAtFirst(Node* & head,int data){
    Node * temp=new Node(data);
    temp->next=head;
    head->prev=temp;
    head=temp;
}
// traversing the linked list
void print(Node *& head){
    Node *temp=head;
    while(temp!=NULL){
       cout<<temp->data<<" ";
       temp=temp->next;
    }
    cout<< endl;
}
// inserting node at any position
void insertPos(int data,Node *&head,Node*& tail,int pos){
    if(pos==1){
        insertAtFirst(head,data);
        return;
    }
    
    Node *temp=head;
    int cnt=1;
     while(cnt<pos-1){
         temp=temp->next;
         cnt++;
     }
    Node *nodeinsert= new Node(data);
     nodeinsert->next= temp->next;
     nodeinsert->prev=temp;
     temp->next->prev=nodeinsert;
     temp->next=nodeinsert;
    
    
    if(temp->next==NULL){
        
        insertAtLast(tail,data);
        return;
    }
}

// deletion operation

void deletion( Node *& head,int pos,Node* &  tail){
    
    // deletion of the starting value
    if(pos==1){
        Node *temp=head;
        temp->next->prev=NULL;
        head=temp->next;
        temp->next=NULL;
        delete temp;
        
    }
    
    else{
        // deleting for the middle value and the last value 
        Node* prev=NULL;
        Node* curr=head;
        int cnt=1;
        while(cnt<pos){
            prev=curr;
            curr=curr->next;
            cnt++;
            
        }
        if(curr->next==NULL){
            tail=prev;
        }
        curr->prev=NULL;
        prev->next=curr->next;
        curr->next=NULL;
        delete curr;
        
        
        
    }
}




int main(){
    Node *node1=new Node(10);
    Node *tail= node1;
    Node *head=node1;
    insertAtFirst(head,12);
    print(head);
    insertAtFirst(head,14);
    print(head);
    insertPos(22,head,tail,3);
    print(head);
    insertPos(23,head,tail,4);
    print(head);
    deletion(head,4,tail);
    print(head);
    deletion(head,4,tail);
    print(head);
    
   
    
   
    
    cout<<"head  :"<< head->data<<endl;
    cout<<"tail  :"<<tail->data<< endl;
    
    
}
