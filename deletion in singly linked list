#include <iostream>

using namespace std;



class Node{
    public:
    int data;
    Node *next;
    
    Node(int data){
        this->data=data;
        this->next=NULL;
    }
    
    ~Node(){
        int value= this->data;
        if(this->next != NULL){
            delete next;
            this->next=NULL;
        }
        cout<<"memory is free for node with the value :"<< value<< endl;
    }
};
// inserting node at starting
void insertAtLast(Node* & tail,int data){
    Node * temp=new Node(data);
    tail->next=temp;
    tail=tail->next;
}

// inserting node at last
void insertAtFirst(Node* & head,int data){
    Node * temp=new Node(data);
    temp->next=head;
    head=temp;
}
// traversing the linked list
void print(Node *& head){
    Node *temp=head;
    while(temp!=NULL){
       cout<<temp->data<<" ";
       temp=temp->next;
    }
    cout<< endl;
}
// inserting node at any position
void insertPos(int data,Node *&head,Node*& tail,int pos){
    if(pos==1){
        insertAtFirst(head,data);
        return;
    }
    
    Node *temp=head;
    int cnt=1;
     while(cnt<pos-1){
         temp=temp->next;
         cnt++;
     }
    Node *nodeinsert= new Node(data);
     nodeinsert->next= temp->next;
    temp->next= nodeinsert;
    
    
    if(temp->next==NULL){
        
        insertAtLast(tail,data);
        return;
    }
}

// deletion operation

void deletion(int posi, Node *& head,Node *& tail){
    // deletion of node at starting position
    if(posi==1){
        
        Node *temp=head;
        head=head->next;
        temp->next=NULL;
        delete temp;
    }
    
    else{
    // deleting node at middle position and last position
    Node *prev=NULL;
    Node *curr=head;
    int cnt=1;
    while(cnt<posi){
        prev=curr;
        curr=curr->next;
        cnt++;
        
      
    }
    if(curr->next==NULL){
        tail=prev;
    }
    prev->next= curr->next;
    curr->next=NULL;
    delete curr;
    }
    
  
}

int main(){
    Node *node1=new Node(10);
    Node *tail= node1;
    Node *head=node1;
    insertAtFirst(head,12);
    print(head);
    insertAtFirst(head,14);
    print(head);
    insertPos(22,head,tail,3);
    print(head);
    insertPos(23,head,tail,4);
    print(head);
    deletion(5,head,tail);
    print(head);
    
   
    
    cout<<"head  :"<< head->data<<endl;
    cout<<"tail  :"<<tail->data<< endl;
    
    
}
