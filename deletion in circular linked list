#include <iostream>

using namespace std;

class Node{
    public:
    int data;
    Node* next;
    
    Node(int data){
        this->data=data;
        this->next=NULL;
        
    }
    
    ~Node(){
        int vall= this->data;
        if(this->next !=NULL){
            delete next;
            next=NULL;
        }
        cout<<"memory free for"<<vall<<endl;
    }
};

void insert(int data,int element, Node *&tail){
   
   if(tail==NULL){
       Node *newnode= new Node(data);
       tail=newnode;
       newnode->next=newnode;
   } 
   else{
       Node *curr=tail;
       while(curr->data != element){
           curr=curr->next;
       }
       Node *temp= new Node(data);
       temp->next=curr->next;
       curr->next=temp;
   }
}
void deletion (Node *& tail,int value){
    if(tail==NULL){
        cout<<"list is empty"<<endl;
        return;
        
    }
    
    else{
        Node *prev=tail;
        Node* curr= prev->next;
        while(curr->data != value){
            prev=curr;
            curr=curr->next;
        }
        
        prev->next=curr->next;
        if(curr==prev){
            tail=NULL;
        }
        else if(tail==curr){
            tail=prev;
        }
        curr->next=NULL;
        delete curr;
    }
}
void print( Node *&tail){
    
    if(tail==NULL){
        cout<<"empty list";
    }
    Node * temp= tail;
    do{
        cout<<tail->data<<" ";
        tail=tail->next;
    }while(tail!=temp);
    cout<< endl;

}

int main()
{
    Node *tail=NULL;
    insert(3,2,tail);
    print(tail);
    
    insert(4,3,tail);
    print(tail);
    
    insert(5,3,tail);
    print(tail);
    
    deletion(tail,4);
    print(tail);
    
    deletion(tail,3);
    print(tail);
      
    deletion(tail,5);
    print(tail);
}
